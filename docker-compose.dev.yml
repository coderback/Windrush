services:
  # PostgreSQL Database
  db:
    image: postgres:17-alpine
    container_name: windrush_db_dev
    environment:
      POSTGRES_DB: windrush_db
      POSTGRES_USER: windrush_user
      POSTGRES_PASSWORD: windrush_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - windrush_dev_network

  # Redis for Caching and Sessions
  redis:
    image: redis:8-alpine
    container_name: windrush_redis_dev
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - windrush_dev_network

  # Django Backend (Development mode with hot reload)
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile.dev
    container_name: windrush_backend_dev
    environment:
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-not-for-production
      - DB_NAME=windrush_db
      - DB_USER=windrush_user
      - DB_PASSWORD=windrush_password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,0.0.0.0
      - FRONTEND_URL=http://localhost:3000
      - USE_S3=False
    ports:
      - "8000:8000"
    volumes:
      - ./src/backend:/app
      - backend_media_dev:/app/media
      - backend_static_dev:/app/staticfiles
    depends_on:
      - db
      - redis
    networks:
      - windrush_dev_network
    command: >
      sh -c "
        until pg_isready -h db -p 5432 -U windrush_user; do
          echo 'Waiting for postgres...'
          sleep 2
        done &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "

  # Next.js Frontend (Development mode with hot reload)
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile.dev
    container_name: windrush_frontend_dev
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_FRONTEND_URL=http://localhost:3000
      - WATCHPACK_POLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - windrush_dev_network
    command: npm run dev

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  backend_media_dev:
    driver: local
  backend_static_dev:
    driver: local

networks:
  windrush_dev_network:
    driver: bridge