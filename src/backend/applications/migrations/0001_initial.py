# Generated by Django 5.2.4 on 2025-08-05 23:33

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        ('jobs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_type', models.CharField(choices=[('job_application', 'Job Application'), ('speculative', 'Speculative Application')], default='job_application', max_length=20)),
                ('cover_letter', models.TextField(help_text='Cover letter or application message', max_length=5000)),
                ('additional_info', models.TextField(blank=True, help_text='Additional information or notes', max_length=2000)),
                ('cv_file', models.FileField(help_text='CV/Resume file', upload_to='applications/cvs/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx'])])),
                ('cover_letter_file', models.FileField(blank=True, help_text='Optional separate cover letter file', null=True, upload_to='applications/cover_letters/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx'])])),
                ('portfolio_file', models.FileField(blank=True, help_text='Optional portfolio file', null=True, upload_to='applications/portfolios/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'zip', 'rar'])])),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('reviewed', 'Under Review'), ('shortlisted', 'Shortlisted'), ('interview_scheduled', 'Interview Scheduled'), ('interviewing', 'Interviewing'), ('assessment', 'Assessment/Test Stage'), ('final_interview', 'Final Interview'), ('offer_made', 'Offer Made'), ('offer_accepted', 'Offer Accepted'), ('offer_declined', 'Offer Declined'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn'), ('on_hold', 'On Hold')], default='submitted', max_length=25)),
                ('rejection_reason', models.CharField(blank=True, choices=[('qualifications', 'Insufficient Qualifications'), ('experience', 'Insufficient Experience'), ('skills', 'Skills Mismatch'), ('visa', 'Visa/Work Authorization Issues'), ('salary_expectations', 'Salary Expectations'), ('location', 'Location Constraints'), ('cultural_fit', 'Cultural Fit'), ('position_filled', 'Position Already Filled'), ('overqualified', 'Overqualified'), ('other', 'Other')], max_length=30, null=True)),
                ('employer_notes', models.TextField(blank=True, help_text='Internal notes from employer', max_length=2000)),
                ('feedback_to_candidate', models.TextField(blank=True, help_text='Feedback shared with candidate', max_length=1000)),
                ('interview_scheduled_date', models.DateTimeField(blank=True, help_text='Scheduled interview date and time', null=True)),
                ('interview_location', models.CharField(blank=True, help_text='Interview location or video call link', max_length=200)),
                ('interview_notes', models.TextField(blank=True, help_text='Interview notes and feedback', max_length=1000)),
                ('offered_salary', models.DecimalField(blank=True, decimal_places=2, help_text='Salary offered to candidate', max_digits=10, null=True)),
                ('offered_benefits', models.JSONField(default=list, help_text='Benefits offered with the position')),
                ('offer_expiry_date', models.DateField(blank=True, help_text='Date when offer expires', null=True)),
                ('start_date_offered', models.DateField(blank=True, help_text='Proposed start date', null=True)),
                ('requires_sponsorship', models.BooleanField(default=True, help_text='Does applicant require visa sponsorship?')),
                ('current_visa_status', models.CharField(blank=True, help_text="Applicant's current visa status", max_length=100)),
                ('visa_expiry_date', models.DateField(blank=True, help_text='Current visa expiry date', null=True)),
                ('source', models.CharField(blank=True, help_text='How applicant found this opportunity', max_length=100)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('viewed_by_employer', models.BooleanField(default=False, help_text='Has employer viewed this application?')),
                ('viewed_at', models.DateTimeField(blank=True, help_text='When employer first viewed application', null=True)),
                ('last_contact_date', models.DateTimeField(blank=True, help_text='Last communication with candidate', null=True)),
                ('next_follow_up_date', models.DateField(blank=True, help_text='Next planned follow-up date', null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(help_text='Company being applied to', on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='companies.company')),
                ('job', models.ForeignKey(blank=True, help_text='Job being applied for (null for speculative applications)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='jobs.job')),
                ('referrer', models.ForeignKey(blank=True, help_text='User who referred this applicant', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Application',
                'verbose_name_plural': 'Applications',
                'ordering': ['-applied_at'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('system', 'System Generated'), ('employer_to_applicant', 'Employer to Applicant'), ('applicant_to_employer', 'Applicant to Employer')], default='employer_to_applicant', max_length=25)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField(max_length=2000)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='messages/attachments/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='applications.application')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Application Message',
                'verbose_name_plural': 'Application Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_status', models.CharField(blank=True, choices=[('submitted', 'Submitted'), ('reviewed', 'Under Review'), ('shortlisted', 'Shortlisted'), ('interview_scheduled', 'Interview Scheduled'), ('interviewing', 'Interviewing'), ('assessment', 'Assessment/Test Stage'), ('final_interview', 'Final Interview'), ('offer_made', 'Offer Made'), ('offer_accepted', 'Offer Accepted'), ('offer_declined', 'Offer Declined'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn'), ('on_hold', 'On Hold')], max_length=25, null=True)),
                ('to_status', models.CharField(choices=[('submitted', 'Submitted'), ('reviewed', 'Under Review'), ('shortlisted', 'Shortlisted'), ('interview_scheduled', 'Interview Scheduled'), ('interviewing', 'Interviewing'), ('assessment', 'Assessment/Test Stage'), ('final_interview', 'Final Interview'), ('offer_made', 'Offer Made'), ('offer_accepted', 'Offer Accepted'), ('offer_declined', 'Offer Declined'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn'), ('on_hold', 'On Hold')], max_length=25)),
                ('notes', models.TextField(blank=True, help_text='Notes about status change', max_length=500)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='applications.application')),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Application Status History',
                'verbose_name_plural': 'Application Status Histories',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.AddIndex(
            model_name='application',
            index=models.Index(fields=['applicant', 'status'], name='application_applica_b6966f_idx'),
        ),
        migrations.AddIndex(
            model_name='application',
            index=models.Index(fields=['job', 'status'], name='application_job_id_7836e3_idx'),
        ),
        migrations.AddIndex(
            model_name='application',
            index=models.Index(fields=['company', 'status'], name='application_company_788cbd_idx'),
        ),
        migrations.AddIndex(
            model_name='application',
            index=models.Index(fields=['application_type'], name='application_applica_80006e_idx'),
        ),
        migrations.AddIndex(
            model_name='application',
            index=models.Index(fields=['applied_at'], name='application_applied_06e426_idx'),
        ),
        migrations.AddIndex(
            model_name='application',
            index=models.Index(fields=['status', 'applied_at'], name='application_status_89c2ad_idx'),
        ),
        migrations.AddConstraint(
            model_name='application',
            constraint=models.CheckConstraint(condition=models.Q(('job__isnull', False), ('application_type', 'speculative'), _connector='OR'), name='job_required_for_job_applications'),
        ),
        migrations.AddIndex(
            model_name='applicationmessage',
            index=models.Index(fields=['application', 'created_at'], name='application_applica_39a073_idx'),
        ),
        migrations.AddIndex(
            model_name='applicationmessage',
            index=models.Index(fields=['recipient', 'is_read'], name='application_recipie_8990b0_idx'),
        ),
    ]
