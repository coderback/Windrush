# Generated by Django 5.2.4 on 2025-08-05 23:33

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Official company name', max_length=255, unique=True)),
                ('slug', models.SlugField(help_text='URL-friendly company identifier', max_length=255, unique=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('description', models.TextField(blank=True, help_text='Company description and overview', max_length=2000)),
                ('industry', models.CharField(blank=True, help_text='Primary industry sector', max_length=100)),
                ('company_size', models.CharField(blank=True, choices=[('startup', '1-10 employees'), ('small', '11-50 employees'), ('medium', '51-200 employees'), ('large', '201-1000 employees'), ('enterprise', '1000+ employees')], help_text='Company size range', max_length=20)),
                ('founded_year', models.IntegerField(blank=True, help_text='Year company was founded', null=True)),
                ('headquarters_address', models.TextField(blank=True, help_text='Main office address')),
                ('city', models.CharField(blank=True, max_length=100)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(default='United Kingdom', max_length=100)),
                ('postcode', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Enter a valid UK postcode', regex='^[A-Z]{1,2}[0-9]{1,2}[A-Z]?\\s?[0-9][A-Z]{2}$')])),
                ('is_sponsor', models.BooleanField(default=True, help_text='Whether company is a licensed visa sponsor')),
                ('sponsor_license_number', models.CharField(blank=True, help_text='Official sponsor license number from UK government', max_length=50, null=True, unique=True)),
                ('sponsor_status', models.CharField(choices=[('active', 'Active Sponsor'), ('suspended', 'Suspended'), ('revoked', 'Revoked'), ('pending', 'Pending Verification')], default='active', help_text='Current sponsor license status', max_length=20)),
                ('sponsor_types', models.JSONField(default=list, help_text='Types of visas this company can sponsor')),
                ('sponsor_verified_date', models.DateField(blank=True, help_text='Date when sponsor status was last verified', null=True)),
                ('logo', models.ImageField(blank=True, help_text='Company logo image', null=True, upload_to='company_logos/')),
                ('banner_image', models.ImageField(blank=True, help_text='Company banner/cover image', null=True, upload_to='company_banners/')),
                ('benefits', models.JSONField(default=list, help_text='List of company benefits and perks')),
                ('company_values', models.TextField(blank=True, help_text='Company values and culture', max_length=1000)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('glassdoor_url', models.URLField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False, help_text='Whether to feature this company prominently')),
                ('is_premium_partner', models.BooleanField(default=False, help_text='Premium partnership status')),
                ('is_active', models.BooleanField(default=True, help_text='Whether company profile is active')),
                ('total_jobs_posted', models.IntegerField(default=0)),
                ('total_hires_made', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CompanyReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('review_text', models.TextField(max_length=2000)),
                ('overall_rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')])),
                ('work_life_balance', models.IntegerField(blank=True, choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], null=True)),
                ('compensation', models.IntegerField(blank=True, choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], null=True)),
                ('career_opportunities', models.IntegerField(blank=True, choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], null=True)),
                ('management', models.IntegerField(blank=True, choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], null=True)),
                ('culture', models.IntegerField(blank=True, choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], null=True)),
                ('job_title', models.CharField(blank=True, max_length=200)),
                ('employment_status', models.CharField(choices=[('current', 'Current Employee'), ('former', 'Former Employee'), ('intern', 'Former Intern')], default='former', max_length=50)),
                ('employment_length', models.CharField(blank=True, help_text="e.g., '2 years', '6 months'", max_length=50)),
                ('received_sponsorship', models.BooleanField(blank=True, help_text='Did this company provide visa sponsorship?', null=True)),
                ('sponsorship_experience', models.TextField(blank=True, help_text='Details about the visa sponsorship process', max_length=1000)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('helpful_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='companies.company')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company Review',
                'verbose_name_plural': 'Company Reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['name'], name='companies_c_name_2d8260_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['city'], name='companies_c_city_42f3fb_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['industry'], name='companies_c_industr_6efa2c_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['is_sponsor'], name='companies_c_is_spon_9c51a2_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['sponsor_status'], name='companies_c_sponsor_e8d833_idx'),
        ),
        migrations.AddIndex(
            model_name='companyreview',
            index=models.Index(fields=['company', 'is_approved'], name='companies_c_company_b710dd_idx'),
        ),
        migrations.AddIndex(
            model_name='companyreview',
            index=models.Index(fields=['overall_rating'], name='companies_c_overall_e6d01c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='companyreview',
            unique_together={('company', 'reviewer')},
        ),
    ]
